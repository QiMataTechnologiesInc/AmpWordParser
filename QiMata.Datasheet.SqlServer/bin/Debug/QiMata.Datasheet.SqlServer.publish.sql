/*
Deployment script for QiMata.Datasheet.SqlServer

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "QiMata.Datasheet.SqlServer"
:setvar DefaultFilePrefix "QiMata.Datasheet.SqlServer"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Datasheet]...';


GO
CREATE SCHEMA [Datasheet]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Datasheet].[Datasheet]...';


GO
CREATE TABLE [Datasheet].[Datasheet] (
    [DatasheetId] INT                IDENTITY (1, 1) NOT NULL,
    [Pdf]         VARBINARY (MAX)    NOT NULL,
    [DateSaved]   DATETIMEOFFSET (0) NOT NULL,
    [PdfProvider] VARCHAR (128)      NOT NULL,
    PRIMARY KEY CLUSTERED ([DatasheetId] ASC)
);


GO
PRINT N'Creating [Datasheet].[Section]...';


GO
CREATE TABLE [Datasheet].[Section] (
    [SectionId]       INT             IDENTITY (1, 1) NOT NULL,
    [SectionText]     VARCHAR (MAX)   NULL,
    [SectionImage]    VARBINARY (MAX) NULL,
    [ParentSectionId] INT             NULL,
    [DatasheetId]     INT             NOT NULL,
    PRIMARY KEY CLUSTERED ([SectionId] ASC)
);


GO
PRINT N'Creating [Datasheet].[Category]...';


GO
CREATE TABLE [Datasheet].[Category] (
    [CategoryId]       INT           IDENTITY (1, 1) NOT NULL,
    [ParentCategoryId] INT           NULL,
    [CategoryName]     VARCHAR (128) NULL,
    PRIMARY KEY CLUSTERED ([CategoryId] ASC)
);


GO
PRINT N'Creating on [Datasheet].[Datasheet].[DateSaved]...';


GO
ALTER TABLE [Datasheet].[Datasheet]
    ADD DEFAULT SYSDATETIMEOFFSET() FOR [DateSaved];


GO
PRINT N'Creating [Datasheet].[FK_SECTION_DATASHEET]...';


GO
ALTER TABLE [Datasheet].[Section]
    ADD CONSTRAINT [FK_SECTION_DATASHEET] FOREIGN KEY ([DatasheetId]) REFERENCES [Datasheet].[Datasheet] ([DatasheetId]);


GO
PRINT N'Creating [Datasheet].[FK_SECTION_SECTION]...';


GO
ALTER TABLE [Datasheet].[Section]
    ADD CONSTRAINT [FK_SECTION_SECTION] FOREIGN KEY ([ParentSectionId]) REFERENCES [Datasheet].[Section] ([SectionId]);


GO
PRINT N'Creating [Datasheet].[FK_CATEGORY_CATEGORY]...';


GO
ALTER TABLE [Datasheet].[Category]
    ADD CONSTRAINT [FK_CATEGORY_CATEGORY] FOREIGN KEY ([ParentCategoryId]) REFERENCES [Datasheet].[Category] ([CategoryId]);


GO
PRINT N'Creating [dbo].[CommaSeperatedCategoryHeirarchies]...';


GO
CREATE VIEW [dbo].[CommaSeperatedCategoryHeirarchies]
	AS 
WITH RootCategories(CategoryId,Category)
AS
(
	SELECT CategoryId, CategoryName
	FROM Datasheet.Category
	WHERE ParentCategoryId IS NULL
)

SELECT r.Category, c.CategoryName
FROM RootCategories as r
JOIN Datasheet.Category as c
ON r.CategoryId = c.ParentCategoryId
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
